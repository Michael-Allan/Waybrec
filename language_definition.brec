Definition of the language Waybrec

    - Waybrec extends Breccia.
    - This document defines the extensions.
        : re `extensions` see     `^^novel fracta$` @ `^^ Fractum$`


    ━━━━━━━━━
     Fractum
    ─────────
        : see @ http://reluk.ca/project/Breccia/language_definition.brec
        novel typology
            : see `^^typology$` @ `^^ Fractum$`
              @ http://reluk.ca/project/Breccia/language_definition.brec
            - New fractal types introduced by Waybrec.

            ╷ ◇ command point
            ╰┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
                ◇ patch
                    • deletion patch
                    • replacement patch
                    ◇ child insertion patch
                        • prependage patch
                        • appendage patch
                    ◇ sibling insertion patch
                        • precession patch
                        • succession patch
                • thoroughfractum designator


    ━━━━━━━━━
     Jointer
    ─────────
        : see @ http://reluk.ca/project/Breccia/language_definition.brec
        effect
            : join @ `^^ Jointer$` @ http://reluk.ca/project/Breccia/language_definition.brec
            - A jointer brings its referent on-way.
                / A pointer does not.
                - Waycasters may freely substitute a jointer for a pointer when they wish
                  the referent to be included in the way.
                - Such logical inclusion is the only additional effect of a jointer.



    ━━━━━━━
     Patch
    ───────
        / A command point.
        - A patch alters the way model at a fractum identified by reference
          to the waysource (referent fractum).
        - Following is the sketch of a definition.
            redact+

        deletion patch
            - `: delete …`
            - deletes the referent fractum from the way model
            - First term: mandatory.

        replacement patch
            - `: replace …`
            - replaces the referent fractum in the way model
            - first term
                - defaults (like elsewhere, mutatis mutandis)
                  to a pattern based on the head of the first child of the patch
                    - so the referent head would be unchanged,
                      or changed only trivially as the pattern formation allows


        ───────────────────────
         child insertion patch
        ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
            prependage patch
                - `: prepend @ …`
                - Adds its children (to the way model) as the first children of the referent fractum.
                - First term: mandatory.

            appendage patch
                - `: append @ …`
                - Adds its children (to the way model) as the last children of the referent fractum.
                - First term: mandatory.


        ─────────────────────────
         sibling insertion patch
        ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
            precession patch
                - `: precede …`
                - inserts its children (to the way model) as siblings directly before the referent fractum
                - First term: mandatory.
            succession patch
                - `: succeed …`
                - appends its children (to the way model) as siblings directly after the referent fractum
                - First term: mandatory.



    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━
     Thoroughfractum designator
    ────────────────────────────
        / A command point.
        - It marks its parent as a thoroughfractum.
        - Its descriptor has this form:

               ───╴‘thoroughfractum’╶────▶

            diagram, The form of the descriptor in a thoroughfractum designator.



    ━━━━━━━━━━━━━━━━━━━━━━
     Way engagement point
    ──────────────────────
        - A task point made private by an intracast privatizer.
            / The task point itself is either intracast, or extracast by way of a jointer.
        - It declares a way engagement.



                                                    \ Copyright © 2019-2020  Michael Allan.  Licence MIT.
