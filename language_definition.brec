Waybrec language definition

    - Waybrec is an extension of Breccia.
    - This file defines the extensions.
    - Novel fractal types introduced by Waybrec:
        : re `fractal types` see also @ http://reluk.ca/project/Breccia/language_definition.brec

        ╷ command point
        ╰┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
            ◆ thoroughfractum designator
            ◆ waycast parameterizer



    ━━━━━━━━━
     Jointer
    ─────────
        : see also @ http://reluk.ca/project/Breccia/language_definition.brec
        - With a fractal referent, a jointer brings the referent on-way.
            : re `fractal referent` cf. `^^non-fractal$` @
              http://reluk.ca/project/waycast/index.brec
            / A pointer has no such effect.



    ━━━━━━━━━━━━━━━━━━━━━━━━━━━━
     Thoroughfractum designator
    ────────────────────────────
        / A type of command point.
        - It marks its simulacral parent as a thoroughfractum, thereby defining the surjoint apex
          from which the way model depends.
        - Its command has this form:

              ╶──╴‘thoroughfractum’╶───▶



    ━━━━━━━━━━━━━━━━━━━━━━━
     Waycast parameterizer
    ───────────────────────
        / A type of command point.
        - It sets a waycast parameter.
        - Its command has this form:

                                        waycast parameter
                              ╭┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╮
             
                                parameter            parameter
              ╶──╴‘set’╶── P ──╴ typifier ──┬── P ──╴  value  ╶──┬───▶
                                            │                    │
                                            └────────────────────┘

                diagram, The form of the command in a waycast parameterizer.

        - Waybrec defines the form common to all types of waycast parameter.
          The form particular to each type (type name, presence and form of value)
          must be defined by its parametric subsystem.
        - Within a parameterizer body:
            - No parameterizer has effect by default.
                / It is ignored unless the parametric subsystem explicitly allows for its occurrence
                  in a parameterizer body.
            - Where parameterizers do have effect:
                - Sibling parameterizers of the same type are disallowed by default.

        parameter typifier

                        ┌─╴◀───╴‘ ’╶──┐
                        │             │
              ╶──╴‘<’╶──┴─── term ────┴──╴‘>’╶───▶
             
                       ╰┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╯
                           type name

        parameter value

                 ┌──────────────╴◀─────── P ───────────────┐
                 │                                         │
                 │  ┌────────────── term ───────────────┐  │
              ╶──┴──┤                                   ├──┴───▶
                    └──╴‘`’╶── pattern matcher ──╴‘`’╶──┘

            / Pattern matchers are to be parsed by default, that is.



    ━━━━━━━━━━━━━━━━━━━━━━
     Way engagement point
    ──────────────────────
        - A task point made private by an intracast privatizer.
            / The task point itself is either intracast, or extracast by way of a jointer.
        - It declares a way engagement.



                                                    \ Copyright © 2019-2022  Michael Allan.  Licence MIT.
